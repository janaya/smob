
SMOB server - a microblog aggregating service
=============================================

The SMOB server enables you to aggregate microblog postings for yourself or 
for a community. It receives notifications of new postings from microblog 
publishing services, keeps an up-to-date collection of the postings, and
allows readers to browse the postings.

The SMOB server complements the SMOB client, which lets you set up a 
personal microblog publishing service.


The code is accessible via Subversion using the following command:

  svn co http://smob.googlecode.com/svn/trunk/server


Requirements
------------

1. You need to have a server on the internet to set up the service on.

2. The server needs to have 
  - a WWW server with PHP5 or PHP4.3 or higher.
  - MySQL 4.0.4 or higher.

3. PHP needs to have the CURL functions.
  - For example, in Debian the package is called php5-curl or php4-curl
  - Or, you can download libcurl from http://curl.haxx.se/dlwiz/?type=lib


Installation
------------

1. Download ARC2 (http://arc.semsol.org) and unzip it in the 'lib' folder.
  - Eg. http://arc.semsol.org/download/2008/04/09/arc_2008_04_09.zip

2. Rename the resulting 'arc_xxx' folder as 'ARC2'.

3. Copy config_dist.php to config.php and edit the parameters.
  - Get a GoogleMaps API key at http://code.google.com/apis/maps/signup.html
    - Fill in your webserver name (http://example.com) in the form.

4. Create the database with the name you used for db_name in the config.
  - Either use a graphical MySQL administration interface,
  - Or run the following command in the shell:
    mysql -h localhost -u your_user_name -p -e "create database your_db_name;"

5. Move this 'server' directory to a web server directory that can be accessed 
   by the readers as well as by the SMOB clients which you want to aggregate.

6. You can restrict write access to the SMOB server using the following methods:

  a) You can set a global API key which the clients then need to match to be 
     able to get their posts aggregated.
    - Edit config.php and set $auth_key to something hard to guess.

  b) Add access control rules (password, IP address) to a .htaccess file.
    - Access to the 'load' directory controls aggregation of new posts.
    - Access to the main directory controls read access to aggregated data.

7. That's all! You can now access the server with a web browser.


Example .htaccess file for controlling new posts
------------------------------------------------

To restrict whose posts can show up in the aggregator, you can put 
the following lines (please adjust accordinly) into load/.htaccess:

Order deny,allow
Deny from all

# List IP addresses of the publishing services that should be allowed 
Allow from 127.0.0.1 # localhost, ie. a publishing service on the local server
Allow from 194.187.213.68 # tuukka.iki.fi

